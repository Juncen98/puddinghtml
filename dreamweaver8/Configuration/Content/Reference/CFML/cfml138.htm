<html>
<head>
<link href="mmres://user_interface_reference.css" rel="stylesheet" type="text/css">
<title>CFXML</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">
   <div id="Description">
   <table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
      <tr> 
         <td valign="top" class="name">CFXML</td>
         <td valign="top" nowrap class="compatibility">&nbsp;</td>
      </tr>
      <tr>
         <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
      </tr>


    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Description</span>
<p>
Creates a ColdFusion XML document object that contains the markup in the tag body. This tag can include XML and CFML tags. ColdFusion processes the CFML code in the tag body, and then assigns the resulting text to an XML document object variable, which is always stored in Unicode.
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Category</span>
<p>
Extensibility tags
</p>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="syntax"><span class="title">Syntax</span><pre>&lt;CFXML 
   variable=&quot;xmlVarName&quot; 
   caseSensitive=&quot;yes&quot; or &quot;no&quot;&gt;
</pre>    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">See also</span>
<p>
IsXmlDoc, IsXmlElem, IsXmlRoot, ToString, XmlChildPos, XmlNew, XmlParse, XmlSearch, XmlTransform; Chapter&#160;35, "Using XML and WDDX" in ColdFusion MX Developer's Guide
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">History</span>
<p>
ColdFusion&#160;MX&#160;7: Added support for using an XML declaration at the start of the text.
</p>

<p>
ColdFusion&#160;MX: Added this tag.
</p>

<p>

</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Usage</span>
<p>
If your XML object is case-sensitive, you cannot use dot notation to reference an element or attribute name. Use the name in associative array (bracket) notation, or a reference that does not use the case-sensitive name (such as xmlChildren[1]) instead. In the following code, the first line will work with a case-sensitive XML object. The second and third lines cause errors:
</p>
<pre>MyDoc.xmlRoot.XmlAttributes[&quot;Version&quot;] = &quot;12b&quot;;
MyDoc.xmlRoot.XmlAttributes.Version = &quot;12b&quot;;
MyDoc.MyRoot.XmlAttributes[&quot;Version&quot;] = &quot;12b&quot;;
</pre>
<p>
Use the XmlFormat function to escape special characters such as &amp;, &gt; and &lt;.
</p>

<p>
To convert an XML document object back into a string, use the ToString function, at which time ColdFusion automatically prepends the &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt; XML declaration.
</p>

<p>
To change the declaration to specify another encoding, use the Replace function. To specify the encoding of the text that is returned to a browser or other application, use the cfcontent tag. 
</p>

<p>
The following example illustrates this process:
</p>
<pre>&lt;cfprocessingdirective suppresswhitespace=&quot;Yes&quot;&gt;
&lt;cfcontent type=&quot;text/xml; charset=utf-16&quot;&gt;
&lt;cfxml variable=&quot;xmlobject&quot;&gt;
&lt;breakfast_menu&gt;
   &lt;food&gt;
      &lt;name quantity=&quot;50&quot;&gt;Belgian Waffles&lt;/name&gt;
      &lt;description&gt;Our famous Belgian Waffles&lt;/description&gt;
   &lt;/food&gt;
&lt;/breakfast_menu&gt;
&lt;/cfxml&gt;

&lt;!--- &lt;cfdump var=&quot;#xmlobject#&quot;&gt;---&gt;

&lt;cfset myvar=toString(xmlobject)&gt;
&lt;cfset mynewvar=replace(myvar, &quot;UTF-8&quot;, &quot;utf-16&quot;)&gt;

&lt;!---&lt;cfdump var=&quot;#mynewvar#&quot;&gt;---&gt;

&lt;cfoutput&gt;#mynewvar#&lt;/cfoutput&gt;
&lt;/cfprocessingdirective&gt;
</pre>
<p>
The cfprocessingdirective tag prevents ColdFusion from putting white space characters in front of the XML declaration.
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Example</span>
<p>
This following example creates a document object whose root element is MyDoc. The object includes text that displays the value of the ColdFusion variable testVar. The code creates four nested child elements, which are generated by an indexed cfloop tag. The cfdump tag displays the XML document object.
</p>
<pre>&lt;cfset testVar = True&gt;
&lt;cfxml variable=&quot;MyDoc&quot;&gt;
   &lt;?xml version=&#39;1.0&#39; encoding=&#39;utf-8&#39; ?&gt;
   &lt;MyDoc&gt;
      &lt;cfif testVar IS True&gt;
         &lt;cfoutput&gt;The value of testVar is True.&lt;/cfoutput&gt;
      &lt;cfelse&gt;
         &lt;cfoutput&gt;The value of testVar is False.&lt;/cfoutput&gt;
      &lt;/cfif&gt;
      &lt;cfloop index = &quot;LoopCount&quot; from = &quot;1&quot; to = &quot;4&quot;&gt;
         &lt;childNode&gt;
            This is Child node &lt;cfoutput&gt;#LoopCount#.&lt;/cfoutput&gt;
         &lt;/childNode&gt;
      &lt;/cfloop&gt;
   &lt;/MyDoc&gt;
&lt;/cfxml&gt;
&lt;cfdump var=#MyDoc#&gt;
</pre>
<p>

</p>

         </td>
      </tr>
   </table>
   </div>
<div id="VARIABLE">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>  
<td valign="top" class="name">VARIABLE</td>
  <td valign="top" nowrap class="compatibility">&nbsp;</td>
  </tr>
  <tr>
  <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
  </tr>

  <tr>
  <td valign="top" class="syntax">&nbsp;</td>
  <td valign="top" nowrap class="requirements">&#160;</td>
  </tr>
  <tr>
  <td colspan="2" class="clearseparation">&nbsp;</td>
  </tr>
  <tr>
  <td valign="top" colspan="2" class="description">



<p>Name of the document object.</p>

  </td>
  </tr>
  </table>
</div>
<div id="CASESENSITIVE">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>  
<td valign="top" class="name">CASESENSITIVE</td>
  <td valign="top" nowrap class="compatibility">&nbsp;</td>
  </tr>
  <tr>
  <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
  </tr>

  <tr>
  <td valign="top" class="syntax">&nbsp;</td>
  <td valign="top" nowrap class="requirements">Optional</td>
  </tr>
  <tr>
  <td colspan="2" class="clearseparation">&nbsp;</td>
  </tr>
  <tr>
  <td valign="top" colspan="2" class="description">

<strong>Default value:</strong> "no"

<ul>

<li>yes: maintains the case of document elements and attributes.</li>

<li>no</li>
</ul>


  </td>
  </tr>
  </table>
</div>

  </body>
</html>
