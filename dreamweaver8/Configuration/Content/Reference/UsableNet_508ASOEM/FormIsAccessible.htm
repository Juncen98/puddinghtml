<html xmlns:un="http://usablenet.com/namespaces/508_rules">
   <link rel="stylesheet" href="josh.css">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   
      <title>Detailed View for rule: Form is accessible</title>
      <!--
  508/W3C Accessibility Suite OEM V2 for Macromedia Dreamweaver
  (C) Copyright 2001-2005 UsableNet Inc. All rights reserved.
  -->
   </head>
   <body bgcolor="#ffffff">
      <div id="Description">
         <table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
            <tr>
               <td valign="top" nowrap="true" class="name">Form is accessible</td>
               <td valign="top" nowrap="true" class="compatibility">&nbsp;</td>
            </tr>
            <tr>
               <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
            </tr>
            <tr>
               <td valign="top" align="right" nowrap="true" colspan="2" class="requirements">
                  Section 508 1194.22(n)
                  
               </td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td valign="top" colspan="2" class="description"><b>Issue Description</b><br>
                  
                  <p>
                     The page contains a FORM element whose components appear
                     to be laid out by a table. The table may make the form
                     unusable.
                     
                  </p>
                  
               </td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td valign="top" colspan="2" class="description"><b>How to check</b>
                  
                  <p>
                     Make sure the form elements and their associated labels are
                     properly rendered by non-graphically enabled browsers. In
                     particular, make sure the form is still usable after the
                     table used to lay it out is linearized. A simple way to do
                     this is to strip out the table tags. Another quick test is
                     to run a piece of paper down the page and read your table
                     line by line.
                     
                  </p>
                  
               </td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td valign="top" colspan="2" class="description"><b>Issue Explanation</b><br>
                  
                  <p>
                     Using a table to lay out a form may make the form unusable.
                     When the user accesses the page through a reading browser
                     or through a device with a small screen such as a PDA or a
                     cell phone, the table cells may be presented in a linear
                     fashion (linearized). This may position the labels of text
                     fields, checkboxes, or radio buttons in unintended places.
                     
                  </p>
                  
                  
                  <p>
                     For a detailed discussion on the effect of layout tables on
                     navigation, see http://www.jimthatcher.com/webcourse4.htm.
                     
                  </p>
                  
                  
                  <p>
                     Another thing to consider is the tabbing order of the form
                     elements. By pressing the TAB key on the keyboard, the user
                     can move sequentially from one element to the next in the
                     order defined on the HTML page. Sometimes, however, you
                     might want to specify a different order. This can be
                     achieved with the TABINDEX attribute of the INPUT, A,
                     BUTTON, AREA, OBJECT, SELECT, and TEXTAREA tags inside a
                     form.
                     
                  </p>
                  
                  
                  <p>
                     You can also use the ACCESSKEY attribute to associate
                     keyboard accelerators to activate the form elements.
                     
                  </p>
                  
               </td>
            </tr>
         </table>
      </div>
   </body>
</html>