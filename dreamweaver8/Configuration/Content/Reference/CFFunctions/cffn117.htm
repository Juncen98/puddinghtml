<html>
<head>
<link href="mmres://user_interface_reference.css" rel="stylesheet" type="text/css">
<title>GETSOAPREQUESTHEADER</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">
   <div id="Description">
   <table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
      <tr> 
         <td valign="top" class="name">GETSOAPREQUESTHEADER</td>
         <td valign="top" nowrap class="compatibility">&nbsp;</td>
      </tr>
      <tr>
         <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
      </tr>


    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Description</span>
<p>
Obtains a SOAP request header. Call only from within a CFC web service function that is processing a request as a SOAP web service.
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Returns</span>
<p>
A SOAP request header.
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Category</span>
<p>
XML functions
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">History</span>
<p>
ColdFusion&#160;MX&#160;7: Added this function.
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Function syntax</span><pre>GetSOAPRequestHeader(namespace, name [, asXML])
</pre>    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">See also</span>
<p>
AddSOAPRequestHeader, AddSOAPResponseHeader, GetSOAPRequest, GetSOAPResponse, GetSOAPResponseHeader, IsSOAPRequest; "Basic web service concepts" in Chapter&#160;36, "Using Web Services," in ColdFusion MX Developer's Guide
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Parameters</span>
<p>

</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Usage</span>
<p>
If you specify False for the asXML parameter, ColdFusion first attempts to retrieve the header using the data type specified in the header's xsi:type attribute. If the xsi:type attribute is not available, ColdFusion attempts to retrieve the header as a string. If you specify True for the asXML parameter, ColdFusion retrieves the header as raw XML.
</p>

<p>
This function throws an error if it is invoked in a context that is not a web service request. Use the IsSOAPRequest function to determine whether the CFC is running as a web service.
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Example</span>
<p>
This example creates a CFC web service that illustrates the operation of the GetSOAPRequestHeader function and also provides a web service that illustrates the operation of other ColdFusion SOAP functions. 
</p>

<p>
Save the following code as headerservice.cfc in a folder called soapheaders under your web root. Test its operation, and specifically the operation of the GetSOAPRequestHeader function, by executing the examples that invoke this web service. For example, see the example for AddSOAPRequestHeader.
</p>
<pre>&lt;h3&gt;GetSOAPRequestHeader Example&lt;/h3&gt;
&lt;cfcomponent displayName=&quot;tester&quot; hint=&quot;Test for SOAP headers&quot;&gt;

&lt;cffunction name=&quot;echo_me&quot; 
         access=&quot;remote&quot;
         output=&quot;false&quot; 
         returntype=&quot;string&quot; 
         displayname=&quot;Echo Test&quot; hint=&quot;Header test&quot;&gt;
         
  &lt;cfargument name=&quot;in_here&quot; required=&quot;true&quot; type=&quot;string&quot;&gt;

&lt;cfset isSOAP = isSOAPRequest()&gt;
&lt;cfif isSOAP&gt;

   &lt;!--- Get the first header as a string and as XML ---&gt;
   &lt;cfset username = getSOAPRequestHeader(&quot;http://mynamespace/&quot;, &quot;username&quot;)&gt;
   &lt;cfset return = &quot;The service saw username: &quot; &amp; username&gt;
   &lt;cfset xmlusername = getSOAPRequestHeader(&quot;http://mynamespace/&quot;, &quot;username&quot;, 
&quot;TRUE&quot;)&gt;
   &lt;cfset return = return &amp; &quot;&lt;br&gt; as XML: &quot; &amp; xmlusername&gt;
   
   &lt;!--- Get the second header as a string and as XML ---&gt;
   &lt;cfset password = getSOAPRequestHeader(&quot;http://mynamespace/&quot;, &quot;password&quot;)&gt;
   &lt;cfset return = return &amp; &quot;The service saw password: &quot; &amp; password&gt;
   &lt;cfset xmlpassword = getSOAPRequestHeader(&quot;http://mynamespace/&quot;, &quot;password&quot;, 
&quot;TRUE&quot;)&gt;
   &lt;cfset return = return &amp; &quot;&lt;br&gt; as XML: &quot; &amp; xmlpassword&gt;

   &lt;!--- Add a header as a string ---&gt;
    &lt;cfset addSOAPResponseHeader(&quot;http://www.tomj.org/myns&quot;, &quot;returnheader&quot;, 
&quot;AUTHORIZED VALUE&quot;, false)&gt;

   &lt;!--- Add a second header using a CFML XML value ---&gt;
   &lt;cfset doc = XmlNew()&gt;
   &lt;cfset x = XmlElemNew(doc, &quot;http://www.tomj.org/myns&quot;, &quot;returnheader2&quot;)&gt;
   &lt;cfset x.XmlText = &quot;hey man, here I am in XML&quot;&gt;
   &lt;cfset  x.XmlAttributes[&quot;xsi:type&quot;] = &quot;xsd:string&quot;&gt;
   &lt;cfset tmp = addSOAPResponseHeader(&quot;ignoredNameSpace&quot;, &quot;ignoredName&quot;, x)&gt; 

&lt;cfelse&gt;
   &lt;!--- Add a header as a string - Must generate error! 
    &lt;cfset addSOAPResponseHeader(&quot;http://www.tomj.org/myns&quot;, &quot;returnheader&quot;, 
&quot;AUTHORIZED VALUE&quot;, false)&gt;
   ---&gt;
    &lt;cfset return = &quot;Not invoked as a web service&quot;&gt;
&lt;/cfif&gt;

&lt;cfreturn return&gt;

&lt;/cffunction&gt;

&lt;/cfcomponent&gt;
</pre>
         </td>
      </tr>
   </table>
   </div>
<div id="NAMESPACE">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>  
<td valign="top" class="name">NAMESPACE</td>
  <td valign="top" nowrap class="compatibility">&nbsp;</td>
  </tr>
  <tr>
  <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
  </tr>


<p>A String that is the namespace for the header.</p>

  </td>
  </tr>
  </table>
</div>
<div id="NAME">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>  
<td valign="top" class="name">NAME</td>
  <td valign="top" nowrap class="compatibility">&nbsp;</td>
  </tr>
  <tr>
  <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
  </tr>


<p>A String that is the name of the header.</p>

  </td>
  </tr>
  </table>
</div>
<div id="ASXML">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>  
<td valign="top" class="name">ASXML</td>
  <td valign="top" nowrap class="compatibility">&nbsp;</td>
  </tr>
  <tr>
  <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
  </tr>


<p>If True, the header is returned as a CFML XML object; if False (default), the header is returned as a Java object.</p>

  </td>
  </tr>
  </table>
</div>

  </body>
</html>
