<html>
<head>
<link href="mmres://user_interface_reference.css" rel="stylesheet" type="text/css">
<title>IIF</title>
</head>
<body bgcolor="#FFFFFF" text="#000000">
   <div id="Description">
   <table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
      <tr> 
         <td valign="top" class="name">IIF</td>
         <td valign="top" nowrap class="compatibility">&nbsp;</td>
      </tr>
      <tr>
         <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
      </tr>


    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Description</span>
<p>
Evaluates a Boolean conditional dynamic expression. Depending on whether the expression is true or false, dynamically evaluates one of two string expressions and returns the result. This function is convenient for incorporating a cfif tag in-line in HTML.
</p>

<p>
For general conditional processing, see cfif. For error handling, see cftry. For more information, see ColdFusion MX Developer's Guide. 
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Returns</span>
<p>
If result is True, returns the value of Evaluate(string_expression1); otherwise, returns the value of Evaluate(string_expression2).
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Category</span>
<p>
Decision functions, Dynamic evaluation functions
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Function syntax</span><pre>IIf(condition, string_expression1, string_expression2)
</pre>    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">See also</span>
<p>
DE, Evaluate
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Parameters</span>
<p>

</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Usage</span>
<p>
The IIf function is a shortcut for the following construct:
</p>
<pre>&lt;cfif condition&gt;
   &lt;cfset result = Evaluate(string_expression1)&gt;
&lt;cfelse&gt;
   &lt;cfset result = Evaluate(string_expression2)&gt;
&lt;/cfif&gt;
</pre>
<p>
The expressions string_expression1 and string_expression2 must be string expressions, so that they are not evaluated immediately as the parameters of IIf. For example:
</p>
<pre>IIf(y is 0, DE(&quot;Error&quot;), x/y)
</pre>
<p>
If y = 0, this generates an error, because the third expression is the value of x/0 (invalid expression).
</p>

<p>
ColdFusion evaluates string_expression1 and string_expression2. To return the string itself, use the DE function.
</p>
<table>
  <tr valign="top">
    <td width="30"><strong>Note: </strong></td>
    <td>If you use number signs (#) in string_expression1 or string_expression2, ColdFusion evaluates the part of the expression in number signs first. If you misuse the number signs, you can cause unexpected results from the IIf function. For example, if you use number signs around the whole expression in string_expression1, and if there is an undefined variable in string_expression1, the function might fail, with the error &#39;Error Resolving Parameter,&#39; </td>
  </tr>
</table>
<p>
If a variable is undefined, ColdFusion throws an error when it processes this function. The following example shows this problem:
</p>
<pre>#IIf(IsDefined(&quot;Form.Deliver&quot;), DE(Form.Deliver), DE(&quot;no&quot;))# 
</pre>
<p>
This returns &quot;Error resolving parameter FORM.DELIVER&quot;.
</p>

<p>
To avoid this problem, use the DE and Evaluate functions in code such as the following:
</p>
<pre>#IIf(IsDefined(&quot;Form.Deliver&quot;), Evaluate(DE(&quot;Form.Deliver&quot;)), DE(&quot;no&quot;))#
</pre>
<p>
This returns &quot;no&quot;; ColdFusion does not throw an error.
</p>

<p>
In the following example, LocalVar is undefined; however, if you omit number signs around LocalVar, the code works properly:
</p>
<pre>&lt;cfoutput&gt;
   #IIf(IsDefined(&quot;LocalVar&quot;), &quot;LocalVar&quot;, 
      DE(&quot;The variable is not defined.&quot;))#
&lt;/cfoutput&gt;
</pre>
<p>
The output is:
</p>
<pre>   The variable is not defined.
</pre>
<p>
The number signs around LocalVar in the following code cause it to fail with the error message &#39;Error Resolving Parameter&#39;, because ColdFusion never evaluates the original condition IsDefined(&quot;LocalVar&quot;).
</p>

<p>
Here is another example:
</p>
<pre>&lt;cfoutput&gt;
#IIf(IsDefined(&quot;LocalVar&quot;), DE(&quot;#LocalVar#&quot;), DE(&quot;The variable is not 
defined.&quot;))#
&lt;/cfoutput&gt;
</pre>
<p>
The error message would be as follows:
</p>
<pre>   Error resolving parameter LOCALVAR
</pre>
<p>
The DE function has no effect on the evaluation of LocalVar, because the number signs cause it to be evaluated immediately.
</p>
    </td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="CLEARSEPARATION">&nbsp;</td>
  </tr>
  <tr>
    <td valign="top" colspan="2" class="description"><span class="title">Example</span><pre>&lt;h3&gt;IIf Function Example&lt;/h3&gt;
&lt;p&gt;IIf evaluates a condition, and does an Evaluate on string 
expression 1 or string expression 2 depending on the Boolean 
outcome &lt;I&gt;(True: run expression 1; False: run expression 2)&lt;/I&gt;.&lt;/p&gt;
&lt;p&gt;The result of the expression 
IIf( Hour(Now()) GTE 12, 
   DE(&quot;It is afternoon or evening&quot;), 
   DE(&quot;It is morning&quot;))
is:&lt;br&gt;&lt;b&gt;
&lt;cfoutput&gt;
   #IIf( Hour(Now()) GTE 12, 
DE(&quot;It is afternoon or evening&quot;), 
DE(&quot;It is morning&quot;))#
&lt;/cfoutput&gt;
&lt;/b&gt;
</pre>
         </td>
      </tr>
   </table>
   </div>
<div id="CONDITION">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>  
<td valign="top" class="name">CONDITION</td>
  <td valign="top" nowrap class="compatibility">&nbsp;</td>
  </tr>
  <tr>
  <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
  </tr>


<p>An expression that can be evaluated as a Boolean.</p>

  </td>
  </tr>
  </table>
</div>
<div id="STRING_EXPRESSION1">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>  
<td valign="top" class="name">STRING_EXPRESSION1</td>
  <td valign="top" nowrap class="compatibility">&nbsp;</td>
  </tr>
  <tr>
  <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
  </tr>


<p>A string or a variable that contains one. Expression to evaluate and return if condition is True.</p>

  </td>
  </tr>
  </table>
</div>
<div id="STRING_EXPRESSION2">
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr>  
<td valign="top" class="name">STRING_EXPRESSION2</td>
  <td valign="top" nowrap class="compatibility">&nbsp;</td>
  </tr>
  <tr>
  <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
  </tr>


<p>A string or a variable that contains one. Expression to evaluate and return if condition is False.</p>

  </td>
  </tr>
  </table>
</div>

  </body>
</html>
