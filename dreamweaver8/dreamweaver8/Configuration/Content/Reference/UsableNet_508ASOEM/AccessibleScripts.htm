<html xmlns:un="http://usablenet.com/namespaces/508_rules">
   <link rel="stylesheet" href="josh.css">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
   
      <title>Detailed View for rule: Scripts are accessible</title>
      <!--
  508/W3C Accessibility Suite OEM V2 for Macromedia Dreamweaver
  (C) Copyright 2001-2005 UsableNet Inc. All rights reserved.
  -->
   </head>
   <body bgcolor="#ffffff">
      <div id="Description">
         <table cellpadding="0" cellspacing="0" border="0" width="100%" class="main">
            <tr>
               <td valign="top" nowrap="true" class="name">Scripts are accessible</td>
               <td valign="top" nowrap="true" class="compatibility">&nbsp;</td>
            </tr>
            <tr>
               <td colspan="2" class="divider"><img src="dwres:18084" width="100%" height="1"></td>
            </tr>
            <tr>
               <td valign="top" align="right" nowrap="true" colspan="2" class="requirements">
                  Section 508 1194.22(l); 
                  
                  WAI
                  
                  / 
                  
                  WCAG
                  
                  1.0 checkpoints 6.3, 8.1, 9.2, 9.3
                  
               </td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td valign="top" colspan="2" class="description"><b>Issue Description</b><br>
                  
                  <p>
                     The page contains a programmatic object such as a script, a
                     plug-in, or an applet that may be used to change the
                     content of the page or its navigation options - and perhaps
                     reduce the page's accessibility.
                     
                  </p>
                  
               </td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td valign="top" colspan="2" class="description"><b>How to check</b>
                  
                  <p>
                     Inaccessible programmatic objects may include:
                     
                  </p>
                  
                  <ul>
                     
                     <li>
                        Rollovers
                        
                     </li>
                     
                     
                     <li>
                        Scripts that present menu options
                        
                     </li>
                     
                     
                     <li>
                        Scripts that handle events triggered by devices other
                        than a keyboard
                        
                     </li>
                     
                     
                     <li>
                        Plug-ins such as Flash, Shockwave, RealAudio, and
                        RealVideo
                        
                     </li>
                     
                     
                     <li>
                        Java applets
                        
                     </li>
                     
                  </ul>
                  
                  
                  <p>
                     Examine the programmatic object included on the page and
                     see if it provides information or interaction options not
                     available through other text on the page.
                     
                  </p>
                  
                  
                  <p>
                     If the script cannot be made accessible, one solution is to
                     include a NOSCRIPT tag with alternative and equivalent
                     content and interaction (using a form).
                     
                  </p>
                  
                  
                  <p>
                     Consider also transforming the client-side script into an
                     equivalent server-side script. In this case, you must write
                     it so that it produces accessible pages.
                     
                  </p>
                  
               </td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td colspan="2" class="clearseparation">&nbsp;</td>
            </tr>
            <tr>
               <td valign="top" colspan="2" class="description"><b>Issue Explanation</b><br>
                  
                  <p>
                     Programmatic objects can change the presentation, content,
                     and navigation options of a page. If some of these changes
                     are not associated to text that can be read by assistive
                     technology, then the page is not accessible. For example,
                     using a script to show a menu of choices on a page without
                     also providing the choices as textual links would make the
                     page inaccessible.
                     
                  </p>
                  
                  
                  <p>
                     A related concept is "device independence." As defined by
                     W3C/WAI (see
                     http://www.w3.org/TR/WAI-WEBCONTENT/#device-independent),
                     it means that users must be able to interact with a website
                     using the supported input and output devices of their
                     choice according to their needs. Input devices may
                     include pointing devices, keyboards, Braille devices, head
                     wands, microphones, and others. Output devices may include
                     monitors, speech synthesizers, and Braille devices.
                     
                  </p>
                  
                  
                  <p>
                     Note that "device-independent support" does not mean that
                     the browser must support every input or output device. It
                     should offer redundant input and output mechanisms for
                     those devices that are supported. For example, if a browser
                     supports keyboard and mouse input, users should be able to
                     interact with all features using either the keyboard or the
                     mouse.
                     
                  </p>
                  
                  
                  <p>
                     Device-independent access means that the user may interact
                     with the user agent or document with a preferred input (or
                     output) device. For example, if a form control can only be
                     activated with a mouse or other pointing device, someone
                     using the page without sight, with voice input, or with a
                     keyboard will not be able to use the form. The form is an
                     example of device dependence, because its use would be
                     possible only through a mouse.
                     
                  </p>
                  
                  
                  <p>
                     Generally, pages that allow keyboard interaction are also
                     accessible through speech input or a command-line
                     interface.
                     
                  </p>
                  
               </td>
            </tr>
         </table>
      </div>
   </body>
</html>